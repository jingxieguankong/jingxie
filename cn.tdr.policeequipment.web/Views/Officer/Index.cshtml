@using cn.tdr.policeequipment.web.Models
@model TableOfficerHeaderModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.xFormDlgId = "x-dlg-form-bindeqt";
    ViewBag.xFormId = "x-dlg-form-bindeqt-form";
}

@Html.Partial("_PartialDataGrid",
    new DataGridPageModel<TableHeaderModel>
    {
        dataAction = Url.Action("GetData"),
        formModel = new GridEditFormModel
        {
            formPartialPage = "_PartialOfficerForm",
            formAction = Url.Action("FormSubmit"),
            formModel = Model
        },
        headerPartialPage = "_PartialTableOfficerRow",
        headerPartialPageModel = new GridRowModel<TableHeaderModel>
        {
            actionFormart = "fmtOper",
            headerModel = Model
        },
        options = ",autoRowHeight:false,pagination:true,pageSize:20,view:detailview,detailFormatter:fmtDetail,onExpandRow:onRowExpand",
        toolbarPartialPage = "_PartialOfficerTableBar",
        tableHeight = ViewBag.ViewHeight
    })

@Html.Partial("_PartialForm",
    new GridEditFormModel
    {
        cancelAction = "xfdlg.close()",
        submitAction = "bindEquipmentSubmit()",
        formId = ViewBag.xFormId,
        formAction = Url.Action("BindEquipmentFormSubmit"),
        formPartialPage = "_PartialBindEquipmentForm",
        dlgId = ViewBag.xFormDlgId,
        formTitle = "绑定警械装备",
        formModel = null
    })

@section scripts{
<script type="text/javascript" src="@Url.Content("~/Scripts/easyui/datagrid-detailview.js")"></script>
<script type="text/javascript">

    var xfdlg = (function (id) {
        return {
            open: function () { $(id).dialog('open'); },
            close: function () { $(id).dialog('close'); }
        };
    })("#@ViewBag.xFormDlgId");

    function xForm() {
        return $("#@ViewBag.xFormId");
    }

    function bindEquipmentSubmit() {
        // 绑定提交
        xForm().form('submit', {
            success: function (data) {
                xfdlg.close();
                var defaults = { code: 0, msg: null, data: false };
                var data = eval('(' + data + ')');
                $.extend(defaults, data);
                if (defaults.code == 0 && !!defaults.data) {
                    gridReload();
                }

                if (!!defaults.code) {
                    $.messager.alert('提示', defaults.msg + '\n代码：' + defaults.code);
                }
            }
        });
    }

    function fixRowHeight(index) {
        grid().datagrid('fixDetailRowHeight', index);
    }

    function onRowExpand(index, row) {
        var ddv = $(this).datagrid('getRowDetail', index).find('div.ddv');
        ddv.panel({
            height: 80,
            border: false,
            cache: false,
            href: '',
            onLoad: function () {
                fixRowHeight(index);
            }
        });
        fixRowHeight(index);
    }

    function fmtDetail(index, row) {
        return '<div class="ddv" style="padding:5px 0"></div>';
    }

    function getRowData(id, cb) {
        var data = grid().datagrid('getData');
        for (var i = 0; i < data.rows.length; i++) {
            var row = data.rows[i];
            if (row.id == id) {
                cb(row);
                break;
            }
        }
    }

    function onEdit(e, id) {
        getRowData(id, function (row) {
            var defaults = {
                orgId: null,
                ptpId: null
            };
            $.extend(defaults, row);
            defaults.orgId = row.org.id;
            defaults.ptpId = row.ptp.id;

            loadComboTreePtp({
                orgId: defaults.orgId, cb: function (data) {
                    $("#ptpId").combotree('loadData', data);
                    showFormDlg(defaults);
                }
            });
        });
    }

    function onDel(e, id, name) {

        var defaults = {
            name: name,
            url: '@Url.Action("Remove")',
            queryParams: { id: id }
        };
        onDelHd(defaults);
    }

    function loadComboTreeData(opts) {
        var defaults = {
            id: null,
            url:null,
            qParams: null,
            cb: function (data, opts) { }
        };
        $.extend(defaults, opts);

        if (!!defaults.id && !!defaults.url) {
            $.get(defaults.url, defaults.qParams, function (data) {
                
                $(defaults.id).combotree('loadData', data);
                $(defaults.id).combotree('setValue', '');

                if (defaults.cb instanceof Function) {
                    defaults.cb(data, defaults);
                }
            });
        }
    }

    function setBingEqQueryParams() {
        $('#bdEqtId').combotree({
            url: '@Url.Action("Tree", "Equipment")',
            method:'get',
            queryParams: {
                orgId: function () { return $('#bdOrgId').val(); },
                cateId: function () { return $('#bdCateId').val(); },
                stgId: function () { return $('#bdStgId').val(); }
            }
        });
    }

    function reloadBindEq() {
        $('#bdEqtId').combotree('reload');
        $('#bdEqtId').combotree('setValue', '');
    }

    function onBindEq(e, id, orgId, ptpId) {
        
        var defaults = {
            bdOfficerId: id, bdOrgId: orgId, bdPtpId: ptpId
        };
        xForm().form('load', defaults);

        // 加载指定警种所需的警械类型
        loadComboTreeData({
            id: '#bdCateId',
            url: '@Url.Action("TreeOnPtp", "EqtType")',
            qParams: { ptpId: ptpId }
        });

        // 加载当前警员所在组织机构的警械库
        loadComboTreeData({
            id: '#bdStgId',
            url: '@Url.Action("Tree", "Storage")',
            qParams: { orgId: orgId }
        });

        // 加载当前警员所在组织机构的警械柜
        loadComboTreeData({
            id: '#bdCabId',
            url: '@Url.Action("Tree", "Cabinet")',
            qParams: { orgId: orgId }
        });

        xfdlg.open();
    }

     // 操作
    function fmtOper(val, row) {
        var html = '<span class="x-a-cls" onclick="onEdit(this, \'' + val + '\' )">编辑</span>\
                    <span class="x-a-cls" onclick="onDel(this, \'' + val + '\', \'' + row.name + '\' )">删除</span>\
                    <span class="x-a-cls" onclick="onBindEq(this, \'' + val + '\', \'' + row.org.id + '\', \'' + row.ptp.id + '\' )">绑定警械</span>';
        return html;
    }

    // 头像
    function fmtAtr(val, row) {
        return val;
    }

    function fmtSex(val, row) {
        var text = "未知";
        if (!val && val == 0) {
            text = "女";
        }

        if (!!val && val == 1) {
            text = "男";
        }

        if (!!val && val == 2) {
            text = "其他";
        }

        return text;
    }

    // 电话
    function fmtTel(val, row) {
        var text = "未绑定";
        if (!!val) {
            text = val;
        }
        return text;
    }

    // 数字证书
    function fmtDigital(val, row) {
        var text = "未绑定";
        if (!!val) {
            text = "已绑定";
        }
        return text;
    }

    function loadComboTreePtp(opts) {
        var defaults = {
            orgId: null,
            cb: function (data) { }
        };
        $.extend(defaults, opts);
        $.get('@Url.Action("Tree", "PoliceType")', { orgId: defaults.orgId }, function (data) {
            defaults.cb(data);
        });
    }

    function comboSelect(id) {
        function cb(newVal, oldVal) {
            loadComboTreePtp({
                orgId: newVal.id,
                cb: function (data) {
                    $(id).combotree('loadData', data);
                }
            });
        }
        return cb;
    }

    function queryClear() {

        $("#queryOrgId").combotree('setValue', '');
        $("#queryPtpId").combotree('loadData', []);
        $("#queryPtpId").combotree('setValue', '');
        $('#queryName').textbox('setValue', '');
        $('#queryCode').textbox('setValue', '');
    }

    function loadFormData(data) {
        var defaults = {
            id: null, name: null, code: null, sex: 1, orgId: null, ptpId: null
        };
        $.extend(defaults, data);
        form().form('load', defaults);
    }

    function showFormDlg(data) {
        loadFormData(data);
        xdlg.open();
    }

    setBingEqQueryParams();

    setQueryParams({
        orgId: function () { return $('#queryOrgId').val(); },
        ptId: function () { return $('#queryPtpId').val(); },
        name: function () { return $('#queryName').val(); },
        code: function () { return $('#queryCode').val(); }
    });

    var sexTreeData = [
        { id: 0, text: '女', children: [] },
        { id: 1, text: '男', children: [] },
        { id: 2, text: '其他', children: [] }
    ];
</script>
}