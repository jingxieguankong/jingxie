@using cn.tdr.policeequipment.web.Models
@model TableEquipmentHeaderModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Html.Partial("_PartialDataGrid",
    new DataGridPageModel<TableHeaderModel>
    {
        dataAction = Url.Action("GetData"),
        formModel = new GridEditFormModel
        {
            formPartialPage = "_PartialEquipmentForm",
            formAction = Url.Action("FormSubmit"),
            formModel = Model
        },
        headerPartialPage = "_PartialEquipmentTableRow",
        headerPartialPageModel = new GridRowModel<TableHeaderModel>
        {
            actionFormart = "fmtOper",
            headerModel = Model
        },
        options = ",autoRowHeight:false,pagination:true,pageSize:20,view:detailview,detailFormatter:fmtDetail,onExpandRow:onRowExpand",
        toolbarPartialPage = "_PartialEquipmentTableBar",
        tableHeight = ViewBag.ViewHeight
    })

@section scripts{
<script type="text/javascript" src="@Url.Content("~/Scripts/easyui/datagrid-detailview.js")"></script>
<script type="text/javascript">

    function fixRowHeight(index) {
        grid().datagrid('fixDetailRowHeight', index);
    }

    function onRowExpand(index, row) {
        var ddv = $(this).datagrid('getRowDetail', index).find('div.ddv');
        ddv.panel({
            height: 80,
            border: false,
            cache: false,
            href: '',
            onLoad: function () {
                fixRowHeight(index);
            }
        });
        fixRowHeight(index);
    }

    function fmtDetail(index, row) {
        return '<div class="ddv" style="padding:5px 0"></div>';
    }

    function getRowData(id, cb) {
        var data = grid().datagrid('getData');
        for (var i = 0; i < data.rows.length; i++) {
            var row = data.rows[i];
            if (row.id == id) {
                cb(row);
                break;
            }
        }
    }

    function onEdit(e, id) {
        getRowData(id, function (row) {
            var data = {};
            $.extend(data, row, {
                eqtId: row.category.id,
                fac: row.factory,
                facCode: row.factoryCode,
                facDate: fmtDate(row.factoryDate, row),
                purchaseDate: fmtDate(row.purchaseDate, row),
                orgId: row.org.id,
                stgId: row.storage.id,
                validInterval: Math.abs((Math.abs(row.expiredDate / 10000) - Math.abs(row.factoryDate / 10000)) / (24 * 60 * 60 * 1000))
            });
            showFormDlg(data);
        });
    }

    function onDel(e, id) {
        var defaults = {
            name: '指定警械',
            url: '@Url.Action("Remove")',
            queryParams: { id: id }
        };
        onDelHd(defaults);
    }


    function fmtOper(val, row) {
        var html = '<span class="x-a-cls" onclick="onEdit(this, \'' + val + '\' )">编辑</span>\
                    <span class="x-a-cls" onclick="onDel(this, \'' + val + '\' )">删除</span>';
        return html;
    }

    function fmtCategory(val, row) {
        return val.name;
    }

    function fmtTagId(val, row) {
        var text = "未绑定";
        if (!!val) {
            text = '已绑定';
        }
        return text;
    }

    function fmtStatus(val, row) {
        var text = "( 未知 )";
        if (val == 0) {
            text = "正常";
        }

        if (val == -1) {
            text = "异常";
        }

        if (val == -2) {
            text = "损坏";
        }

        return text;
    }

    function fmtPower(val, row) {
        var text = "正常";

        if (val == 0) {
            text = "无电量";
        }

        if (!!val && val <= 10) {
            text = "低电量";
        }
        return text + ' (' + val + ')';
    }

    function fmtDispatch(val, row) {
        var text = "( 未知 )";
        if (val == 0) {
            text = "未布控";
        }

        if (val == 1) {
            text = "布控中";
        }

        if (val == 2) {
            text = "已撤控";
        }

        return text;
    }

    function fmtDate(val, row) {
        var date = new Date(val / 10000);
        return date.getFullYear() + '年 ' + (date.getMonth() + 1) + '月 ' + date.getDate() + '日';
    }

    function queryClear() {
        $("#queryTagId").textbox('setValue', '');
        $("#queryFacCode").textbox('setValue', '');
        $("#queryDtpId").combotree('setValue', '');
        $("#queryOrgId").combotree('setValue', '');

        $("#queryStgId").combotree('loadData', []);
        $("#queryCabId").combotree('loadData', []);
        $("#queryStgId").combotree('setValue', '');
        $("#queryCabId").combotree('setValue', '');
    }

    function loadComboTreeData(opts) {
        var defaults = {
            id: null, url: null, qParams: null, cb: function (data) {}
        };
        $.extend(defaults, opts);
        if (!!defaults.id && !!defaults.url) {
            $.get(defaults.url, defaults.qParams, function (data) {
                $(defaults.id).combotree('loadData', data);
                $(defaults.id).combotree('setValue', '');

                if (defaults.cb instanceof Function) {
                    defaults.cb(data, opts);
                }
            });
        }
    }

    function onQueryComboTreeData(newVal, oldVal) {
        debugger;
        loadComboTreeData({
            id: '#queryStgId',
            url: '@Url.Action("Tree", "Storage")',
            qParams: { orgId: newVal.id }
        });

        loadComboTreeData({
            id: '#queryCabId',
            url: '@Url.Action("Tree", "Cabinet")',
            qParams: { orgId: newVal.id }
        });
    }

    function loadFormStorageTreeData(orgId, cb) {
        loadComboTreeData({
            id: '#stgId',
            url: '@Url.Action("Tree", "Storage")',
            qParams: { orgId: orgId },
            cb:cb
        });
    }

    function onFormOrgSelected(newVal, oldVal) {
        loadFormStorageTreeData(newVal.id);
    }

    function showFormDlg(data) {
        var defaults = {
            id: null, eqtId: null, mod: null, fac: null, facCode: null,
            tagId: null, orgId: null, stgId: null, facDate: null,
            validInterval: 1, purchaseDate: null
        };
        $.extend(defaults, data);

        if (!!defaults.orgId) {
            // 加载警械库数据
            loadFormStorageTreeData(defaults.orgId, function () {
                form().form('load', defaults);
            });
        } else {
            form().form('load', defaults);
        }
        xdlg.open();
    }

    function fmtDatePicker(date) {
        return date.getFullYear() + ' 年' + (date.getMonth() + 1) + ' 月' + date.getDate() + ' 日';
    }

    setQueryParams({
        orgId: function () { return $('#queryOrgId').val(); },
        storageId: function () { return $('#queryStgId').val(); },
        cabinetId: function () { return $('#queryCabId').val(); },
        tagCode: function () { return $('#queryTagId').val(); },
        factorCode: function () { return $('#queryFacCode').val(); },
        dataType: function () {
            var dtp = $('#queryDtpId').val();
            if (!dtp) {
                dtp = 0;
            }
            return dtp;
        }
    });

    var dataTypeTreeData = [
        { id: 1, text: '正在布控', children: [] },
        { id: 2, text: '已撤控', children: [] },
        { id: 3, text: '已过期', children: [] },
        { id: 4, text: '即将过期', children: [] },
        { id: 5, text: '未过期', children: [] },
        { id: 6, text: '已分配', children: [] },
        { id: 7, text: '已损坏', children: [] },
        { id: 8, text: '低电量', children: [] }
    ];

    $(document).ready(function () {
        var date = new Date();
        $("#facDate").datetimebox('setValue', date.getFullYear() + ' 年' + (date.getMonth() + 1) + ' 月' + date.getDate() + ' 日');
    });

</script>
}